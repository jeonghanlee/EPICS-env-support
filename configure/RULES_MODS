.PHONY: init.modules clone.modules $(MOD_NAMES_VARS) conf.modules 

init.modules: clone.modules

.PHONY: remove.genmk clean.genmk  reconf.modules show.genmk

reconf.modules: remove.genmk 
	@make null

## we have to remove it always to make sure all generated .MODULEGEN.mk is up-to-date
## There are two events which we need to update it 
## 1) the beginning of make init 
## 2) when RELEASE file is changed. 
##    So, we cannot detect when RELEASE.local file is introduced... hmm... In case, reconf.modules...
remove.genmk: 
	-rm -f $(TOP)/configure/*.mk

clean.genmk: remove.genmk

show.genmk:
	@cat -bs $(TOP)/configure/*.mk

clone.modules: $(MOD_NAMES_VARS)

$(MOD_NAMES_VARS):
	@if test -d "$(TOP)/$(SRC_PATH_$(@))"; then \
		printf "Skip clone, because of the exist directory %s.\n" "$(SRC_PATH_$(@))"; \
	else \
		git clone $(SRC_GITURL_$(@)) $(SRC_PATH_$(@)); \
		cd $(SRC_PATH_$(@)) && git checkout $(SRC_TAG_$(@)); \
	fi

#	$(call gitclone,$(SRC_GITURL_$(@)),$(SRC_PATH_$(@)),$(SRC_TAG_$(@)))

distclean.modules: 
	@for mod in $(SRC_PATH_MODULES) ; do \
		rm -rf $$mod ; \
 	done

conf.modules: conf.ADCore

conf.ADCore:
	@echo "EPICS_BASE:=$(INSTALL_LOCATION)"               > $(TOP)/$(SRC_PATH_ADCORE)/configure/RELEASE.local
	@echo "ASYN:=$(INSTALL_LOCATION_MODS)/asyn"          >> $(TOP)/$(SRC_PATH_ADCORE)/configure/RELEASE.local
	@echo "CHECK_RELEASE = NO"                               > $(TOP)/$(SRC_PATH_ADCORE)/configure/CONFIG_SITE
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_ADCORE)"    >> $(TOP)/$(SRC_PATH_ADCORE)/configure/CONFIG_SITE
	@echo "USR_CPPFLAGS  += `pkg-config --cflags libxml-2.0`" >> $(TOP)/$(SRC_PATH_ADCORE)/configure/CONFIG_SITE

conf.ADCore.show:
	cat -b  $(TOP)/$(SRC_PATH_ADCORE)/configure/CONFIG_SITE.local

build.modules:
	@for mod in $(SRC_PATH_MODULES) ; do \
		make -C "$$mod"; \
	done

install.modules:
	@for mod in $(SRC_PATH_MODULES) ; do \
		make -C "$$mod" install; \
	done

symlink.modules:
	@for mod in $(SRC_PATH_MODULES) ; do \
		make -C "$$mod" symlink; \
	done

